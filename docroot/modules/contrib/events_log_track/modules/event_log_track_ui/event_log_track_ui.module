<?php

/**
 * @file
 * Hooks for Overview page.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;

/**
 * Form submission callback.
 */
function event_log_track_ui_form_submit(&$form, FormStateInterface $form_state) {
  if ($form_state->hasTemporaryValue('event_log_track_logged')) {
    // Some forms are submitted twice, for instance the node_form.
    // We will only call the submit callback once.
    return;
  }

  $form_state->setTemporaryValue('event_log_track_logged', TRUE);

  // Get form id.
  $form_id = $form['#form_id'];

  // Dispatch the submission to the correct event handler.
  $handlers = event_log_track_ui_get_event_handlers();
  foreach ($handlers as $type => $handler) {
    $dispatch = FALSE;
    if (!empty($handler['form_ids']) && in_array($form_id, $handler['form_ids'])) {
      $dispatch = TRUE;
    }
    elseif (!empty($handler['form_ids_regexp'])) {
      foreach ($handler['form_ids_regexp'] as $regexp) {
        if (preg_match($regexp, $form_id)) {
          $dispatch = TRUE;
          break;
        }
      }
    }

    if ($dispatch) {
      // Dispatch!
      $function = $handler['form_submit_callback'];
      if (function_exists($function)) {
        $log = $function($form, $form_state, $form_id);
        if (!empty($log)) {
          // Log the event.
          $log['type'] = $type;
          event_log_track_insert($log);
        }
      }
    }
  }
}

/**
 * Returns all existing event handlers.
 *
 * @return array
 *   An array with the event log handlers.
 */
function event_log_track_ui_get_event_handlers(): array {
  $handlers = drupal_static(__FUNCTION__);
  if ($handlers === NULL) {
    $handlers = Drupal::moduleHandler()->invokeAll('event_log_track_handlers');
    \Drupal::moduleHandler()->alter('event_log_track_handlers', $handlers);
  }
  return $handlers;
}

/**
 * Implements hook_form_alter().
 */
function event_log_track_ui_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Add submit callback to ANY form action.
  event_log_track_ui_add_submit_handler($form, 'event_log_track_ui_form_submit');
}

/**
 * Adds a submit handler to all submit hooks in the form tree.
 *
 * @param array &$element
 *   A form element or the form itself.
 * @param string $callback
 *   The callback to be added.
 */
function event_log_track_ui_add_submit_handler(array &$element, string $callback) {
  if (array_key_exists("#submit", $element)) {
    if ((!empty($element['#type']) && $element['#type'] == 'form') || count($element["#submit"])) {
      $element["#submit"][] = $callback;
    }
  }
  $keys = Element::children($element);
  foreach ($keys as $key) {
    if (is_array($element[$key])) {
      event_log_track_ui_add_submit_handler($element[$key], $callback);
    }
  }
}
