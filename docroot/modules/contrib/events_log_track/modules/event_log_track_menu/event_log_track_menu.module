<?php

/**
 * @file
 * Logs menu CUD commands in the event_log_track module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_event_log_track_handlers().
 */
function event_log_track_menu_event_log_track_handlers() {
  $handlers = [];

  $handlers['menu'] = [
    'title' => t('Menu'),
    'form_ids' => [
      'menu_link_content_menu_link_content_form',
      'menu_link_content_menu_link_content_delete_form',
    ],
    'form_submit_callback' => 'event_log_track_menu_form_submit',
  ];
  return $handlers;
}

/**
 * Event log callback for the user authentication event log.
 *
 * @return array
 *   Return an associative array to log data in database.
 */
function event_log_track_menu_form_submit(array &$form, FormStateInterface $form_state, $form_id) {
  $log = NULL;

  switch ($form_id) {
    case 'menu_link_content_menu_link_content_form':
      $menu = $form_state->getValues();
      $get_title = $menu['title'][0]['value'];
      $get_path = $menu['link'][0]['uri'];
      $get_menu_parent = substr($menu['menu_parent'], 0, -1);
      $route_parameters = \Drupal::routeMatch()->getParameter('menu_link_content');

      if (empty($route_parameters)) {
        // Insert Menu Link.
        $log = [
          'operation' => 'link insert',
          'description' => t('%title, %path', [
            '%title' => $get_title,
            '%path' => $get_path,
          ]),
          'ref_char' => $get_menu_parent,
        ];
      }
      else {
        // Update Menu Link.
        $log = [
          'operation' => 'link update',
          'description' => t('%title (%id), %path', [
            '%title' => $get_title,
            '%id' => $route_parameters->get('id')->value,
            '%path' => $get_path,
          ]),
          'ref_numeric' => $route_parameters->get('id')->value,
          'ref_char' => $route_parameters->getMenuName(),
        ];
      }
      break;

    case 'menu_link_content_menu_link_content_delete_form':
      // Delete Menu Link.
      $route_parameters = \Drupal::routeMatch()->getParameter('menu_link_content');

      $uri = '';
      $title = '';
      $name = '';
      if ($route_parameters->isDefaultTranslation()) {
        $title = $route_parameters->getTitle();
        $uri = $route_parameters->get('link')->uri;
        $name = $route_parameters->getMenuName();
      }
      else {
        $title = $route_parameters->label();
        $uri = $route_parameters->getUntranslated()->get('link')->uri;
        $name = $route_parameters->getUntranslated()->getMenuName() . "(Original)";
      }
      $log = [
        'operation' => 'link delete',
        'description' => t('%title (%id), %path', [
          '%title' => $title,
          '%id' => $route_parameters->id(),
          '%path' => $uri,
        ]),
        'ref_numeric' => $route_parameters->id(),
        'ref_char' => $name,
      ];
      break;
  }
  return $log;
}

/**
 * Implements hook_menu_insert().
 */
function event_log_track_menu_menu_insert($menu) {
  $log = [
    'type' => 'menu',
    'operation' => 'insert',
    'description' => t('%title (%name)', [
      '%title' => $menu->get('label'),
      '%name' => $menu->get('id'),
    ]),
    'ref_char' => $menu->get('id'),
  ];
  event_log_track_insert($log);
}

/**
 * Implements hook_menu_update().
 */
function event_log_track_menu_menu_update($menu) {
  $log = [
    'type' => 'menu',
    'operation' => 'update',
    'description' => t('%title (%name)', [
      '%title' => $menu->get('label'),
      '%name' => $menu->get('id'),
    ]),
    'ref_char' => $menu->get('id'),
  ];
  event_log_track_insert($log);
}

/**
 * Implements hook_menu_delete().
 */
function event_log_track_menu_menu_delete($menu) {
  $log = [
    'type' => 'menu',
    'operation' => 'delete',
    'description' => t('%title (%name)', [
      '%title' => $menu->get('label'),
      '%name' => $menu->get('id'),
    ]),
    'ref_char' => $menu->get('id'),
  ];
  event_log_track_insert($log);
}

/**
 * Implements hook_menu_link_content_insert().
 */
function event_log_track_menu_menu_link_content_insert($menu_content) {
  $log = [
    'type' => 'menu',
    'operation' => 'insert',
    'description' => t('%type: %title', [
      '%type' => $menu_content->bundle(),
      '%title' => $menu_content->label(),
    ]),
    'ref_numeric' => $menu_content->id(),
    'ref_char' => $menu_content->label(),
  ];
  event_log_track_insert($log);
}

/**
 * Implements hook_menu_link_content_update().
 */
function event_log_track_menu_menu_link_content_update($menu_content) {
  $log = [
    'type' => 'menu',
    'operation' => 'update',
    'description' => t('%type: %title', [
      '%type' => $menu_content->bundle(),
      '%title' => $menu_content->label(),
    ]),
    'ref_numeric' => $menu_content->id(),
    'ref_char' => $menu_content->label(),
  ];
  event_log_track_insert($log);
}

/**
 * Implements hook_menu_link_content_delete().
 */
function event_log_track_menu_menu_link_content_delete($menu_content) {
  $log = [
    'type' => 'menu',
    'operation' => 'delete',
    'description' => t('%type: %title', [
      '%type' => $menu_content->bundle(),
      '%title' => $menu_content->label(),
    ]),
    'ref_numeric' => $menu_content->id(),
    'ref_char' => $menu_content->label(),
  ];
  event_log_track_insert($log);
}
